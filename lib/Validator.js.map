{"version":3,"sources":["Validator.js"],"names":["Validator","rules","rule","push","config","reduce","activeCheckers","checker","name","check","value","component","resolveCheckers","props","validity","state","addState","validator","create","addRule","requiredErrorMessage","isValid","Array","isArray","length","message"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAOaA,S,WAAAA,S;AAET,6BAAc;AAAA;;AACV,iBAAKC,KAAL,GAAa,EAAb;AACH;;;;oCAEOC,I,EAAM;AACV,qBAAKD,KAAL,CAAWE,IAAX,CAAgBD,IAAhB;AACA,uBAAO,IAAP;AACH;;;8CAE4B;AAAA,oBAAbE,MAAa,uEAAJ,EAAI;;;AAEzB,oBAAMH,QAAQ,KAAKA,KAAnB;;AAEA,uBAAOA,MACFI,MADE,CAEC,UAACC,cAAD,EAAiBC,OAAjB,EAA6B;AAAA,wBAElBC,IAFkB,GAEHD,OAFG,CAElBC,IAFkB;AAAA,wBAEZC,KAFY,GAEHF,OAFG,CAEZE,KAFY;;;AAIzB,wBAAID,QAAQJ,MAAZ,EAAoB;AAChBE,uCAAeH,IAAf,CAAoB;AAChBK,sCADgB;AAEhBC,mCAAOA,KAFS;AAGhBC,mCAAON,OAAOI,IAAP;AAHS,yBAApB;AAKH;;AAED,2BAAOF,cAAP;AAEH,iBAhBF,EAiBC,EAjBD,CAAP;AAoBH;;;qCAEQI,K,EAAOC,S,EAAW;;AAEvB,uBAAO,KACFC,eADE,CACcD,UAAUE,KAAV,CAAgBZ,KAD9B,EAEFI,MAFE,CAGC,UAACS,QAAD,EAAWP,OAAX,EAAuB;AACnB,wBAAME,QAAQF,QAAQE,KAAtB;AACA,wBAAMM,QAAQN,MAAMC,KAAN,EAAaC,SAAb,CAAd;AACAG,6BAASE,QAAT,CAAkBD,KAAlB;AACA,2BAAOD,QAAP;AACH,iBARF,EASC,wBATD,CAAP;AAYH;;;;;;AAIL,QAAMG,YAAY,IAAIjB,SAAJ,EAAlB;;sBAEeiB,S;;;AAEfA,cAAUC,MAAV,GAAmB;AAAA,eAAM,IAAIlB,SAAJ,EAAN;AAAA,KAAnB;;AAEAiB,cAAUE,OAAV,CAAkB;AACdX,cAAM,UADQ;AAEdC,aAFc,iBAERC,KAFQ,QAEQ;AAAA,gBAARG,KAAQ,QAARA,KAAQ;;;AAElB,gBAAMO,uBAAuBP,MAAMZ,KAAN,CAAYmB,oBAAzC;;AAEA,gBAAMC,UAAUC,MAAMC,OAAN,CAAcb,KAAd,IACV,CAAC,CAACA,MAAMc,MADE,GAEV,OAAOd,KAAP,KAAiB,QAAjB,GAA4BA,UAAU,EAAtC,GAA2CA,SAAS,IAF1D;;AAIA,mBAAO;AACHW,yBAASA,OADN;AAEHI,yBAASL,wBAAwB;AAF9B,aAAP;AAKH;AAfa,KAAlB","file":"Validator.js","sourcesContent":["/**\n * @file Validitor\n * @author leon(ludafa@outlook.com)\n */\n\nimport Validity from './validator/Validity';\n\nexport class Validator {\n\n    constructor() {\n        this.rules = [];\n    }\n\n    addRule(rule) {\n        this.rules.push(rule);\n        return this;\n    }\n\n    resolveCheckers(config = {}) {\n\n        const rules = this.rules;\n\n        return rules\n            .reduce(\n                (activeCheckers, checker) => {\n\n                    const {name, check} = checker;\n\n                    if (name in config) {\n                        activeCheckers.push({\n                            name,\n                            check: check,\n                            value: config[name]\n                        });\n                    }\n\n                    return activeCheckers;\n\n                },\n                []\n            );\n\n    }\n\n    validate(value, component) {\n\n        return this\n            .resolveCheckers(component.props.rules)\n            .reduce(\n                (validity, checker) => {\n                    const check = checker.check;\n                    const state = check(value, component);\n                    validity.addState(state);\n                    return validity;\n                },\n                new Validity()\n            );\n\n    }\n\n}\n\nconst validator = new Validator();\n\nexport default validator;\n\nvalidator.create = () => new Validator();\n\nvalidator.addRule({\n    name: 'required',\n    check(value, {props}) {\n\n        const requiredErrorMessage = props.rules.requiredErrorMessage;\n\n        const isValid = Array.isArray(value)\n            ? !!value.length\n            : typeof value === 'string' ? value !== '' : value != null;\n\n        return {\n            isValid: isValid,\n            message: requiredErrorMessage || '请填写此字段'\n        };\n\n    }\n});\n"]}