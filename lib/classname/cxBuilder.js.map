{"version":3,"sources":["classname/cxBuilder.js"],"names":["create","addPrefix","prefix","map","className","join","resolveVariants","props","variants","size","indexOf","concat","resolveStates","states","hidden","disabled","type","displayName","hyphenatedClassName","getVariantClassName","getStateClassName","getPartClassName","part","createBuilder","builder","addStates","removeStates","clearStates","addVariants","removeVariants","clearVariants","build","setPart","p","newStates","name","args","variant","filter","term","getDisplayName"],"mappings":"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","file":"cxBuilder.js","sourcesContent":["/**\n * @file melon/classname\n * @author leon(ludafa@outlook.com)\n */\n\nimport {createClasses, createClassName} from './classname';\n\nimport {hyphenate, pascalize} from '../util/string';\n\nimport {\n    COMPONENT_CLASS_PREFIX,\n    COMPONENT_SIZES,\n    COMPONENT_VARIANT_PREFIX,\n    COMPONENT_STATE_PREFIX\n} from '../config';\n\nfunction addPrefix(prefix) {\n\n    return function (...args) {\n\n        return createClasses(...args)\n            .map(function (className) {\n                return `${prefix}-${className}`;\n            })\n            .join(' ');\n\n    };\n\n}\n\n/**\n * import {create} from 'cxBuilder';\n * const builder = create('textbox');\n *\n * builder()\n *   .part('hehe')\n *   .addStates({invalid: true})\n *   .addVariants(1, 2, 3)\n *   .add('some other classname')\n *   .build()\n *\n * builder({states: {invalid: true}, variants: [12321, 12321], size: 'xx'}).build()\n *\n */\n\nfunction resolveVariants(props) {\n    let {variants = [], size} = props;\n    return COMPONENT_SIZES.indexOf(size) > -1\n        ? variants.concat(`size-${size}`)\n        : variants;\n}\n\nfunction resolveStates(props) {\n    const {states, hidden, disabled} = props;\n\n    return {\n        ...states,\n        hidden,\n        disabled\n    };\n}\n\nexport function create(type) {\n\n    const displayName = pascalize(type);\n    const hyphenatedClassName = hyphenate(displayName);\n    const getVariantClassName = addPrefix(COMPONENT_VARIANT_PREFIX);\n    const getStateClassName = addPrefix(COMPONENT_STATE_PREFIX);\n\n    function getPartClassName(part) {\n        const prefix = `${COMPONENT_CLASS_PREFIX}-${hyphenatedClassName}`;\n        return part ? `${prefix}-${part}` : prefix;\n    }\n\n    function createBuilder(props) {\n\n        let part = '';\n        let states = resolveStates(props);\n        let variants = resolveVariants(props);\n\n        const builder = {\n            addStates,\n            removeStates,\n            clearStates,\n            addVariants,\n            removeVariants,\n            clearVariants,\n            build,\n            part: setPart\n        };\n\n        function setPart(p) {\n            part = p;\n            return builder;\n        }\n\n        function addStates(newStates) {\n            states = {\n                ...states,\n                ...newStates\n            };\n            return builder;\n        }\n\n        function removeStates(name) {\n            states[name] = false;\n            return builder;\n        }\n\n        function clearStates() {\n            states = {};\n            return builder;\n        }\n\n        function addVariants(...args) {\n            variants = [...variants, ...args];\n            return builder;\n        }\n\n        function removeVariants(variant) {\n            variants = variants.filter(function (term) {\n                return term !== variant;\n            });\n            return builder;\n        }\n\n        function clearVariants() {\n            variants = [];\n            return builder;\n        }\n\n        function build() {\n            return createClassName(\n                props.className,\n                getPartClassName(part),\n                getVariantClassName(variants),\n                getStateClassName(states)\n            );\n        }\n\n        return builder;\n\n    }\n\n    function builder(props = {}) {\n        return createBuilder(props);\n    }\n\n    builder.getPartClassName = getPartClassName;\n\n    builder.getDisplayName = function getDisplayName() {\n        return displayName;\n    };\n\n    return builder;\n\n}\n"]}