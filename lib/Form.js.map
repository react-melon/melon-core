{"version":3,"sources":["Form.js"],"names":["Form","props","fields","state","addField","bind","removeField","pointer","attachForm","detachForm","validator","length","field","push","filter","f","value","getValue","name","disabled","reduce","data","isValidFormField","checkValidity","isValid","formValidity","validity","validate","errors","states","noValidate","onSubmit","rest","e","preventDefault","getData","displayName","propTypes","onSumbit","func","target","string","action","method","oneOf","shape","isRequired","defaultProps","childContextTypes"],"mappings":"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","file":"Form.js","sourcesContent":["/**\n * @file Form\n * @author leon(ludafa@outlook.com)\n */\n\nimport React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\nimport validator from './Validator';\n\nexport default class Form extends PureComponent {\n\n    constructor(props) {\n\n        super(props);\n\n        this.fields = [];\n        this.state = {};\n\n        this.addField = this.addField.bind(this);\n        this.removeField = this.removeField.bind(this);\n\n    }\n\n    getChildContext() {\n        return {\n            pointer: '/',\n            attachForm: this.addField,\n            detachForm: this.removeField,\n            validator: this.props.validator\n        };\n    }\n\n    componentWillUnmount() {\n        this.fields.length = 0;\n        this.fields = null;\n    }\n\n    addField(field) {\n        this.fields.push(field);\n    }\n\n    removeField(field) {\n\n        const fields = this.fields;\n\n        if (fields) {\n            this.fields = this.fields.filter(f => f !== field);\n        }\n\n    }\n\n    isValidFormField(field) {\n        const value = field.getValue();\n        const {name, disabled} = field.props;\n        return name && !disabled && value != null;\n    }\n\n    getData() {\n        return this\n            .fields\n            .reduce(\n                (data, field) => {\n\n                    if (this.isValidFormField(field)) {\n                        data[field.props.name] = field.getValue();\n                    }\n\n                    return data;\n                },\n                {}\n            );\n    }\n\n    validate() {\n        return this.checkValidity().isValid;\n    }\n\n    checkValidity() {\n\n        const validator = this.props.validator;\n\n        return this\n            .fields\n            .reduce((formValidity, field) => {\n\n                // 不校验以下字段\n                if (!this.isValidFormField(field)) {\n                    return formValidity;\n                }\n\n                const value = field.getValue();\n                const validity = validator.validate(value, field);\n\n                return {\n                    isValid: formValidity.isValid && validity.isValid(),\n                    errors: [\n                        ...formValidity.errors,\n                        ...validity.states.filter(state => !state.isValid)\n                    ]\n                };\n\n            }, {\n                isValid: true,\n                errors: []\n            });\n    }\n\n    render() {\n\n        const {\n            noValidate,\n            onSubmit,\n            /* eslint-disable no-unused-vars */\n            validator,\n            /* eslint-enable no-unused-vars */\n            ...rest\n        } = this.props;\n\n        return (\n            <form {...rest} onSubmit={e => {\n\n                if (!noValidate) {\n                    if (!this.validate()) {\n                        e.preventDefault();\n                        return;\n                    }\n                }\n\n                if (onSubmit) {\n                    e.data = this.getData();\n                    onSubmit(e);\n                }\n\n\n            }} />\n        );\n\n    }\n\n}\n\nForm.displayName = 'Form';\n\nForm.propTypes = {\n    onSumbit: PropTypes.func,\n    target: PropTypes.string,\n    action: PropTypes.string,\n    method: PropTypes.oneOf(['POST', 'GET']),\n    validator: PropTypes.shape({\n        validate: PropTypes.func.isRequired\n    })\n};\n\nForm.defaultProps = {\n    validator\n};\n\nForm.childContextTypes = {\n    attachForm: PropTypes.func,\n    detachForm: PropTypes.func,\n    validator: PropTypes.shape({\n        validate: PropTypes.func.isRequired\n    }),\n    pointer: PropTypes.string.isRequired\n};\n"]}