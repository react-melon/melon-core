{"version":3,"sources":["Validator.js"],"names":["Validator","rules","addRule","rule","push","resolveCheckers","config","reduce","activeCheckers","checker","name","check","value","validate","component","props","validity","state","addState","validator","create","requiredErrorMessage","isValid","Array","isArray","length","message"],"mappings":";;;;;;;;;;;;;;;;;;;;QAOaA,S,WAAAA,S;AAET,6BAAc;AAAA;;AACV,iBAAKC,KAAL,GAAa,EAAb;AACH;;4BAEDC,O,oBAAQC,I,EAAM;AACV,iBAAKF,KAAL,CAAWG,IAAX,CAAgBD,IAAhB;AACA,mBAAO,IAAP;AACH,S;;4BAEDE,e,8BAA6B;AAAA,gBAAbC,MAAa,uEAAJ,EAAI;;;AAEzB,gBAAML,QAAQ,KAAKA,KAAnB;;AAEA,mBAAOA,MACFM,MADE,CAEC,UAACC,cAAD,EAAiBC,OAAjB,EAA6B;AAAA,oBAElBC,IAFkB,GAEHD,OAFG,CAElBC,IAFkB;AAAA,oBAEZC,KAFY,GAEHF,OAFG,CAEZE,KAFY;;;AAIzB,oBAAID,QAAQJ,MAAZ,EAAoB;AAChBE,mCAAeJ,IAAf,CAAoB;AAChBM,kCADgB;AAEhBC,+BAAOA,KAFS;AAGhBC,+BAAON,OAAOI,IAAP;AAHS,qBAApB;AAKH;;AAED,uBAAOF,cAAP;AAEH,aAhBF,EAiBC,EAjBD,CAAP;AAoBH,S;;4BAEDK,Q,qBAASD,K,EAAOE,S,EAAW;;AAEvB,mBAAO,KACFT,eADE,CACcS,UAAUC,KAAV,CAAgBd,KAD9B,EAEFM,MAFE,CAGC,UAACS,QAAD,EAAWP,OAAX,EAAuB;AACnB,oBAAME,QAAQF,QAAQE,KAAtB;AACA,oBAAMM,QAAQN,MAAMC,KAAN,EAAaE,SAAb,CAAd;AACAE,yBAASE,QAAT,CAAkBD,KAAlB;AACA,uBAAOD,QAAP;AACH,aARF,EASC,2BATD,CAAP;AAYH,S;;;;;AAIL,QAAMG,YAAY,IAAInB,SAAJ,EAAlB;;yBAEemB,S;;;AAEfA,cAAUC,MAAV,GAAmB;AAAA,eAAM,IAAIpB,SAAJ,EAAN;AAAA,KAAnB;;AAEAmB,cAAUjB,OAAV,CAAkB;AACdQ,cAAM,UADQ;AAEdC,aAFc,iBAERC,KAFQ,QAEQ;AAAA,gBAARG,KAAQ,QAARA,KAAQ;;;AAElB,gBAAMM,uBAAuBN,MAAMd,KAAN,CAAYoB,oBAAzC;;AAEA,gBAAMC,UAAUC,MAAMC,OAAN,CAAcZ,KAAd,IACV,CAAC,CAACA,MAAMa,MADE,GAEV,OAAOb,KAAP,KAAiB,QAAjB,GAA4BA,UAAU,EAAtC,GAA2CA,SAAS,IAF1D;;AAIA,mBAAO;AACHU,yBAASA,OADN;AAEHI,yBAASL,wBAAwB;AAF9B,aAAP;AAKH;AAfa,KAAlB","file":"Validator.js","sourcesContent":["/**\n * @file Validitor\n * @author leon(ludafa@outlook.com)\n */\n\nimport Validity from './validator/Validity';\n\nexport class Validator {\n\n    constructor() {\n        this.rules = [];\n    }\n\n    addRule(rule) {\n        this.rules.push(rule);\n        return this;\n    }\n\n    resolveCheckers(config = {}) {\n\n        const rules = this.rules;\n\n        return rules\n            .reduce(\n                (activeCheckers, checker) => {\n\n                    const {name, check} = checker;\n\n                    if (name in config) {\n                        activeCheckers.push({\n                            name,\n                            check: check,\n                            value: config[name]\n                        });\n                    }\n\n                    return activeCheckers;\n\n                },\n                []\n            );\n\n    }\n\n    validate(value, component) {\n\n        return this\n            .resolveCheckers(component.props.rules)\n            .reduce(\n                (validity, checker) => {\n                    const check = checker.check;\n                    const state = check(value, component);\n                    validity.addState(state);\n                    return validity;\n                },\n                new Validity()\n            );\n\n    }\n\n}\n\nconst validator = new Validator();\n\nexport default validator;\n\nvalidator.create = () => new Validator();\n\nvalidator.addRule({\n    name: 'required',\n    check(value, {props}) {\n\n        const requiredErrorMessage = props.rules.requiredErrorMessage;\n\n        const isValid = Array.isArray(value)\n            ? !!value.length\n            : typeof value === 'string' ? value !== '' : value != null;\n\n        return {\n            isValid: isValid,\n            message: requiredErrorMessage || '请填写此字段'\n        };\n\n    }\n});\n"]}