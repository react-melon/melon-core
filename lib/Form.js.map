{"version":3,"sources":["Form.js"],"names":["Form","props","fields","state","addField","bind","removeField","getChildContext","pointer","attachForm","detachForm","validator","componentWillUnmount","length","field","push","filter","f","isValidFormField","value","getValue","name","disabled","getData","reduce","data","validate","checkValidity","isValid","formValidity","validity","errors","states","render","noValidate","onSubmit","rest","e","preventDefault","displayName","propTypes","onSumbit","func","target","string","action","method","oneOf","shape","isRequired","defaultProps","childContextTypes"],"mappings":"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","file":"Form.js","sourcesContent":["/**\n * @file Form\n * @author leon(ludafa@outlook.com)\n */\n\nimport React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\nimport validator from './Validator';\n\nexport default class Form extends PureComponent {\n\n    constructor(props) {\n\n        super(props);\n\n        this.fields = [];\n        this.state = {};\n\n        this.addField = this.addField.bind(this);\n        this.removeField = this.removeField.bind(this);\n\n    }\n\n    getChildContext() {\n        return {\n            pointer: '/',\n            attachForm: this.addField,\n            detachForm: this.removeField,\n            validator: this.props.validator\n        };\n    }\n\n    componentWillUnmount() {\n        this.fields.length = 0;\n        this.fields = null;\n    }\n\n    addField(field) {\n        this.fields.push(field);\n    }\n\n    removeField(field) {\n\n        const fields = this.fields;\n\n        if (fields) {\n            this.fields = this.fields.filter(f => f !== field);\n        }\n\n    }\n\n    isValidFormField(field) {\n        const value = field.getValue();\n        const {name, disabled} = field.props;\n        return name && !disabled && value != null;\n    }\n\n    getData() {\n        return this\n            .fields\n            .reduce(\n                (data, field) => {\n\n                    if (this.isValidFormField(field)) {\n                        data[field.props.name] = field.getValue();\n                    }\n\n                    return data;\n                },\n                {}\n            );\n    }\n\n    validate() {\n        return this.checkValidity().isValid;\n    }\n\n    checkValidity() {\n\n        const validator = this.props.validator;\n\n        return this\n            .fields\n            .reduce((formValidity, field) => {\n\n                // 不校验以下字段\n                if (!this.isValidFormField(field)) {\n                    return formValidity;\n                }\n\n                const value = field.getValue();\n                const validity = validator.validate(value, field);\n\n                return {\n                    isValid: formValidity.isValid && validity.isValid(),\n                    errors: [\n                        ...formValidity.errors,\n                        ...validity.states.filter(state => !state.isValid)\n                    ]\n                };\n\n            }, {\n                isValid: true,\n                errors: []\n            });\n    }\n\n    render() {\n\n        const {\n            noValidate,\n            onSubmit,\n            /* eslint-disable no-unused-vars */\n            validator,\n            /* eslint-enable no-unused-vars */\n            ...rest\n        } = this.props;\n\n        return (\n            <form {...rest} onSubmit={e => {\n\n                if (!noValidate) {\n                    if (!this.validate()) {\n                        e.preventDefault();\n                        return;\n                    }\n                }\n\n                if (onSubmit) {\n                    e.data = this.getData();\n                    onSubmit(e);\n                }\n\n\n            }} />\n        );\n\n    }\n\n}\n\nForm.displayName = 'Form';\n\nForm.propTypes = {\n    onSumbit: PropTypes.func,\n    target: PropTypes.string,\n    action: PropTypes.string,\n    method: PropTypes.oneOf(['POST', 'GET']),\n    validator: PropTypes.shape({\n        validate: PropTypes.func.isRequired\n    })\n};\n\nForm.defaultProps = {\n    validator\n};\n\nForm.childContextTypes = {\n    attachForm: PropTypes.func,\n    detachForm: PropTypes.func,\n    validator: PropTypes.shape({\n        validate: PropTypes.func.isRequired\n    }),\n    pointer: PropTypes.string.isRequired\n};\n"]}